// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package repositories

import (
	"context"
)

type Querier interface {
	AddCollab(ctx context.Context, arg AddCollabParams) error
	AddMemberToGroup(ctx context.Context, arg AddMemberToGroupParams) error
	// Check if the user has permission to access the answer or collaborator
	// of the slide that the answer belongs to.
	CheckAnswerPermission(ctx context.Context, arg CheckAnswerPermissionParams) (bool, error)
	CheckIsCollab(ctx context.Context, arg CheckIsCollabParams) (bool, error)
	CheckQuestionPermission(ctx context.Context, arg CheckQuestionPermissionParams) (bool, error)
	CheckSlidePermission(ctx context.Context, arg CheckSlidePermissionParams) (bool, error)
	CheckUserInGroup(ctx context.Context, arg CheckUserInGroupParams) (bool, error)
	CountAnswerByQuestionID(ctx context.Context, questionID string) ([]CountAnswerByQuestionIDRow, error)
	CreateAnswer(ctx context.Context, arg CreateAnswerParams) (Answer, error)
	CreateGroup(ctx context.Context, arg CreateGroupParams) (Group, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateSlide(ctx context.Context, arg CreateSlideParams) (Slide, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAnswer(ctx context.Context, id string) error
	DeleteAnswersByQuestion(ctx context.Context, questionID string) error
	DeleteAnswersBySlide(ctx context.Context, slideID string) error
	DeleteGroup(ctx context.Context, groupID string) error
	DeleteQuestion(ctx context.Context, id string) error
	DeleteQuestionsBySlide(ctx context.Context, slideID string) error
	DeleteSlide(ctx context.Context, id string) error
	DeleteUser(ctx context.Context, email string) error
	GetAnswer(ctx context.Context, id string) (Answer, error)
	GetAnswerByQuestionAndIndex(ctx context.Context, arg GetAnswerByQuestionAndIndexParams) (Answer, error)
	GetAnswerHistory(ctx context.Context, arg GetAnswerHistoryParams) (AnswerHistory, error)
	GetAnswersByQuestion(ctx context.Context, questionID string) ([]Answer, error)
	GetGroup(ctx context.Context, groupID string) (Group, error)
	GetGroupByUser(ctx context.Context, userID string) ([]GetGroupByUserRow, error)
	GetOwnerOfQuestion(ctx context.Context, id string) (string, error)
	GetQuestion(ctx context.Context, id string) (Question, error)
	GetQuestionBySlideAndIndex(ctx context.Context, arg GetQuestionBySlideAndIndexParams) (Question, error)
	GetQuestionsBySlide(ctx context.Context, slideID string) ([]Question, error)
	GetRoleInGroup(ctx context.Context, arg GetRoleInGroupParams) (string, error)
	GetSlide(ctx context.Context, id string) (Slide, error)
	GetSlidesByOwner(ctx context.Context, owner string) ([]Slide, error)
	GetUser(ctx context.Context, userID string) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserGroup(ctx context.Context, arg GetUserGroupParams) (UserGroup, error)
	GetUserQuestion(ctx context.Context, questionID string) (UserQuestion, error)
	ListAnswerHistoryByAnswerID(ctx context.Context, answerID string) ([]AnswerHistory, error)
	ListAnswerHistoryByQuestionID(ctx context.Context, questionID string) ([]AnswerHistory, error)
	ListAnswerHistoryBySlideID(ctx context.Context, slideID string) ([]AnswerHistory, error)
	ListCollab(ctx context.Context, userID string) ([]Slide, error)
	ListCollabBySlide(ctx context.Context, slideID string) ([]User, error)
	ListEmailInGroup(ctx context.Context, groupID string) ([]string, error)
	ListGroupJoined(ctx context.Context, userID string) ([]ListGroupJoinedRow, error)
	ListGroupOwned(ctx context.Context, userID string) ([]ListGroupOwnedRow, error)
	ListMemberInGroup(ctx context.Context, groupID string) ([]ListMemberInGroupRow, error)
	ListUser(ctx context.Context, arg ListUserParams) ([]User, error)
	ListUserQuestion(ctx context.Context, slideID string) ([]UserQuestion, error)
	RemoveCollab(ctx context.Context, arg RemoveCollabParams) error
	RemoveMemberFromGroup(ctx context.Context, arg RemoveMemberFromGroupParams) error
	ToggleUserQuestionAnswered(ctx context.Context, questionID string) (UserQuestion, error)
	UpdateAnswer(ctx context.Context, arg UpdateAnswerParams) (Answer, error)
	UpdateAvatarUrl(ctx context.Context, arg UpdateAvatarUrlParams) (User, error)
	UpdateMemberRole(ctx context.Context, arg UpdateMemberRoleParams) error
	UpdateMemberStatus(ctx context.Context, arg UpdateMemberStatusParams) error
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) (User, error)
	UpdatePasswordByEmail(ctx context.Context, arg UpdatePasswordByEmailParams) (User, error)
	UpdateProfile(ctx context.Context, arg UpdateProfileParams) (User, error)
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) (Question, error)
	UpdateSlide(ctx context.Context, arg UpdateSlideParams) (Slide, error)
	UpdateSocialID(ctx context.Context, arg UpdateSocialIDParams) (User, error)
	UpdateVerifiedCode(ctx context.Context, arg UpdateVerifiedCodeParams) (User, error)
	UpsertAnswerHistory(ctx context.Context, arg UpsertAnswerHistoryParams) (AnswerHistory, error)
	UpsertUserQuestion(ctx context.Context, arg UpsertUserQuestionParams) (UserQuestion, error)
	UpvoteUserQuestion(ctx context.Context, questionID string) (UserQuestion, error)
	Verify(ctx context.Context, email string) (User, error)
}

var _ Querier = (*Queries)(nil)
